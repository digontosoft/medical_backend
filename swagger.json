{
  "swagger": "2.0",
  "info": {
    "description": "Medical Approval System api documentations",
    "version": "1.0.0",
    "title": "Medical Approval System API Documentations",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Auth",
      "description": "Everything Authentication"
    },
    {
      "name": "Users",
      "description": "Users related api"
    }
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter JWT Bearer token as **Bearer &lt;token>**"
    }
  },
  "paths": {
    "/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Registers a single user",
        "description": "Creates a new user with the provided information.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User to be registered",
            "required": true,
            "schema": {
              "$ref": "#/definitions/register"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/registerResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login a single user",
        "description": "Login with email and password",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "login",
            "description": "Login with username and password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully login",
            "schema": {
              "$ref": "#/definitions/loginResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Retrieves a list of all user data.",
        "produces": ["application/json"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by ID",
        "description": "Retrieves a single user by ID.",
        "produces": ["application/json"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to retrieve",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user by ID",
        "description": "Updates a single user's information.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to update",
            "type": "string"
          },
          {
            "in": "body",
            "name": "user",
            "description": "User object with updated fields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully."
          },
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user by ID",
        "description": "Deletes a single user.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to delete",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/software": {
      "get": {
        "tags": ["Software"],
        "summary": "Get all software",
        "description": "Retrieves a list of all software entries",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of software entries",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Software"
              }
            },
            "examples": {
              "application/json": [
                {
                  "name": "Medical Imaging Software",
                  "details": "Advanced imaging analysis tool",
                  "version": "2.1.0",
                  "medicalUseCases": "Radiology and many more",
                  "contactPerson": "John Smith",
                  "emailAddress": "john.smith@medical.com",
                  "createdAt": "2023-06-15T10:00:00Z",
                  "updatedAt": "2023-06-15T10:00:00Z"
                }
              ]
            }
          },
          "500": {
            "description": "Error fetching software data"
          }
        }
      },
      "post": {
        "tags": ["Software"],
        "summary": "Create new software",
        "description": "Creates a new software entry",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "software",
            "description": "Software object to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Software"
            },
            "examples": {
              "application/json": {
                "name": "Patient Management System",
                "details": "Comprehensive patient record management",
                "version": "1.0.0",
                "medicalUseCases": ["Primary Care", "Hospital Management"],
                "contactPerson": "Jane Doe",
                "emailAddress": "jane.doe@medical.com"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Software created successfully",
            "schema": {
              "$ref": "#/definitions/Software"
            },
            "examples": {
              "application/json": {
                "name": "Patient Management System",
                "details": "Comprehensive patient record management",
                "version": "1.0.0",
                "medicalUseCases": ["Primary Care", "Hospital Management"],
                "contactPerson": "Jane Doe",
                "emailAddress": "jane.doe@medical.com",
                "createdAt": "2023-06-15T10:00:00Z",
                "updatedAt": "2023-06-15T10:00:00Z"
              }
            }
          },
          "400": {
            "description": "Error creating software entry"
          }
        }
      }
    },
    "/software/{id}": {
      "get": {
        "tags": ["Software"],
        "summary": "Get software by ID",
        "description": "Retrieves a single software entry by ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of software to retrieve",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Software entry found",
            "schema": {
              "$ref": "#/definitions/Software"
            }
          },
          "404": {
            "description": "Software not found"
          },
          "500": {
            "description": "Error fetching software data"
          }
        }
      },
      "put": {
        "tags": ["Software"],
        "summary": "Update software",
        "description": "Updates an existing software entry",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of software to update",
            "type": "string"
          },
          {
            "in": "body",
            "name": "software",
            "description": "Updated software object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Software"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Software updated successfully",
            "schema": {
              "$ref": "#/definitions/Software"
            }
          },
          "404": {
            "description": "Software not found"
          },
          "500": {
            "description": "Error updating software"
          }
        }
      },
      "delete": {
        "tags": ["Software"],
        "summary": "Delete software",
        "description": "Deletes a software entry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of software to delete",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Software deleted successfully"
          },
          "404": {
            "description": "Software not found"
          },
          "500": {
            "description": "Error deleting software"
          }
        }
      }
    }
  },
  "definitions": {
    "register": {
      "type": "object",
      "required": ["firstName", "lastName", "email", "password"],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "registerResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "login": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string",
          "example": "ruhul.cse123@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "test123"
        }
      }
    },
    "loginResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "_id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "6601e50217fc70b39ecc269b"
        },
        "firstName": {
          "type": "string",
          "example": "Ruhul"
        },
        "lastName": {
          "type": "string",
          "example": "Amin"
        },
        "email": {
          "type": "string",
          "example": "ruhul.cse123@gmail.com"
        },
        "phoneNumber": {
          "type": "string",
          "example": "5867987979656"
        },
        "userType": {
          "type": "string",
          "example": "Admin"
        },
        "userStatus": {
          "type": "string",
          "example": "Active"
        },
        "passport": {
          "type": "string",
          "example": "575558686868686868"
        },
        "nid": {
          "type": "string",
          "example": "tes12344545"
        },
        "postalCode": {
          "type": "string",
          "example": "2216"
        },
        "address": {
          "type": "string",
          "example": "Dhaka,Bangladesh"
        },
        "dateOfBirth": {
          "type": "string",
          "example": "13/06/1996"
        }
      }
    },
    "Software": {
      "type": "object",
      "required": ["name", "details", "version", "medicalUseCases", "contactPerson", "emailAddress"],
      "properties": {
      "_id": {
        "type": "string",
        "example": "6601e50217fc70b39ecc269c"
      },
      "name": {
        "type": "string",
        "example": "Medical Imaging Software"
      },
      "details": {
        "type": "string",
        "example": "Advanced imaging analysis tool"
      },
      "version": {
        "type": "string",
        "example": "2.1.0"
      },
      "medicalUseCases": {
        "type": "string",
        "example": "Radiology and many more"
      },
      "contactPerson": {
        "type": "string",
        "example": "John Smith"
      },
      "emailAddress": {
        "type": "string",
        "example": "john.smith@medical.com"
      }
    }
  }
  }
}
